True <- root : NewShare net0 for (*) [reserve <= 2000] on rootShare.
True <- root : AddUser adf.
True <- root : NewShare hadoop for (*) [reserve <= 100 ]
                              on net0 
                              throttle bucket(0,100,10).
True <- root : Grant hadoop to adf.
// requires one token per tick
True <- adf : reserve(*) = 1 on hadoop.
// token bucket was initialized with 0 tokens
//False <- adf : reserve(*) = 10 on hadoop from now to +2.
True <- root : Tick 1.

// token bucket has 9 tokens, receives (10-1)=9 on each tick
False <- adf : reserve(*) = 14 on hadoop from now to +2. // Note: 13 succeeds 
True <- root : Tick 1.
// token bucket has 18 tokens, receives (10-1)=9 per tick
True <- adf : reserve(*) = 10 on hadoop from now to +2.

// token bucket has 18 tokens, receives (10-11)=-1 per tick
False <- adf : reserve(*) = 18 on hadoop from now to +1.
True <- root : Tick 1.
// token bucket has 17 tokens, receives (10-11)=-1 per tick
True <- adf : reserve(*) = 10 on hadoop from now to +1.
// token bucket has 17 tokens, receives (10-21)=-11 per tick
False <- adf : reserve(*) = 7 on hadoop from now to +1.

// Bursting test:
True <- root : Tick 50.
// token bucket has 100 tokens, receives (10-1) = 9 per tick
False <- adf : reserve(*) = 26 on hadoop from now to +6.
True  <- adf : reserve(*) = 29 on hadoop from now to +5.
False <- adf : reserve(*) = 1 on hadoop from now to +1.

True <- root : Tick 5.

// Can burst again
True <- root : Tick 12.
False <- adf : reserve(*) = 26 on hadoop from now to +6.
True  <- adf : reserve(*) = 29 on hadoop from now to +5.
False <- adf : reserve(*) = 1 on hadoop from now to +1.



